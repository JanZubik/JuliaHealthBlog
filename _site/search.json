[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog\n\n\n Back to top"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn‚Äôt specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\n\nWelcome to the JuliaHealthBlog! üëã\n\n\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n\n\n\n\n\n\nExploring Anthracyclines and Disease within an OMOP CDM Database\n\n\n\n\n\n\ncardiovascular disease\n\n\nomop cdm\n\n\nobservational health\n\n\ncancer\n\n\n\nAn overview of how to use the observational health tools within JuliaHealth to explore the usage‚Ä¶\n\n\n\n\n\nJun 23, 2024\n\n\nJacob S. Zelko\n\n\n6 min\n\n\n\n\n\n\n\n\n\n\n\n\nDummy Post\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\nPost description\n\n\n\n\n\nJun 22, 2024\n\n\nFoobar\n\n\n1 min\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/dummy/index.html",
    "href": "posts/dummy/index.html",
    "title": "Dummy Post",
    "section": "",
    "text": "Seciton 1\nSmall dummy blog post\n\n\nCode\n2 + 2\n\n\n4\n\n\n\n\nCode\nprintln(2 + 2)\n\n\n4\n\n\n\n\nSection 2\n\n\nSection 3\n\n\n\n\n\n\n Back to topCitationBibTeX citation:@online{2024,\n  author = {, Foobar},\n  title = {Dummy {Post}},\n  date = {2024-06-22},\n  url = {https://juliahealth.org/JuliaHealthBlog/posts/dummy/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nFoobar. 2024. ‚ÄúDummy Post.‚Äù June 22, 2024. https://juliahealth.org/JuliaHealthBlog/posts/dummy/."
  },
  {
    "objectID": "posts/complex_characterization/index.html",
    "href": "posts/complex_characterization/index.html",
    "title": "Exploring Anthracyclines and Disease within an OMOP CDM Database",
    "section": "",
    "text": "Background\nThis is a small sample notebook I threw together to illustrate how to further build a small characterization study when exploring drugs and conditions of interest. It goes into a bit more depth on how to find drugs and diseases folks are interested in.\n\n\nSet-Up\nLoading required packages\n\n\nCode\nusing JSON3\nusing HTTP\nusing OMOPCDMCohortCreator\n\nimport DBInterface:\n    connect,\n    execute\nimport LibPQ:\n    Connection\n\n\nCreating connection to database\n\n\nCode\nconn = connect(\n    Connection, \n    \"user=thecedarprince dbname=synthea\"\n)\n\n\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\n\n\nPostgreSQL connection (CONNECTION_OK) with parameters:\n  user = thecedarprince\n  passfile = /home/thecedarprince/.pgpass\n  channel_binding = prefer\n  dbname = synthea\n  port = 5432\n  client_encoding = UTF8\n  options = -c DateStyle=ISO,YMD -c IntervalStyle=iso_8601 -c TimeZone=UTC\n  application_name = LibPQ.jl\n  sslmode = prefer\n  sslcompression = 0\n  sslsni = 1\n  ssl_min_protocol_version = TLSv1.2\n  gssencmode = prefer\n  krbsrvname = postgres\n  target_session_attrs = any\n\n\nGenerating database details for the synthetic database we are connecting to (this is used internally by the OMOPCDMCohortCreator.jl packag):\n\n\nCode\nGenerateDatabaseDetails(:postgresql, \"omop\")\nGenerateTables(conn)\n\n\n[ Info: Global database dialect set to: postgresql\n[ Info: Global schema set to: omop\n[ Info: source_to_concept_map table generated internally\n[ Info: payer_plan_period table generated internally\n[ Info: vocabulary table generated internally\n[ Info: note_nlp table generated internally\n[ Info: procedure_occurrence table generated internally\n[ Info: domain table generated internally\n[ Info: metadata table generated internally\n[ Info: cohort_summary_stats table generated internally\n[ Info: fact_relationship table generated internally\n[ Info: drug_exposure table generated internally\n[ Info: all_visits table generated internally\n[ Info: final_visit_ids table generated internally\n[ Info: person table generated internally\n[ Info: cost table generated internally\n[ Info: observation table generated internally\n[ Info: provider table generated internally\n[ Info: visit_detail table generated internally\n[ Info: assign_all_visit_ids table generated internally\n[ Info: device_exposure table generated internally\n[ Info: measurement table generated internally\n[ Info: source_to_standard_vocab_map table generated internally\n[ Info: location table generated internally\n[ Info: visit_occurrence table generated internally\n[ Info: relationship table generated internally\n[ Info: dose_era table generated internally\n[ Info: concept table generated internally\n[ Info: death table generated internally\n[ Info: concept_class table generated internally\n[ Info: drug_era table generated internally\n[ Info: note table generated internally\n[ Info: episode_event table generated internally\n[ Info: episode table generated internally\n[ Info: specimen table generated internally\n[ Info: condition_occurrence table generated internally\n[ Info: cohort_inclusion table generated internally\n[ Info: cohort table generated internally\n[ Info: concept_ancestor table generated internally\n[ Info: cohort_inclusion_stats table generated internally\n[ Info: cohort_inclusion_result table generated internally\n[ Info: observation_period table generated internally\n[ Info: condition_era table generated internally\n[ Info: concept_relationship table generated internally\n[ Info: cohort_censor_stats table generated internally\n[ Info: concept_synonym table generated internally\n[ Info: cdm_source table generated internally\n[ Info: cohort_definition table generated internally\n[ Info: drug_strength table generated internally\n[ Info: source_to_source_vocab_map table generated internally\n[ Info: care_site table generated internally\n\n\nPostgreSQL connection (CONNECTION_OK) with parameters:\n  user = thecedarprince\n  passfile = /home/thecedarprince/.pgpass\n  channel_binding = prefer\n  dbname = synthea\n  port = 5432\n  client_encoding = UTF8\n  options = -c DateStyle=ISO,YMD -c IntervalStyle=iso_8601 -c TimeZone=UTC\n  application_name = LibPQ.jl\n  sslmode = prefer\n  sslcompression = 0\n  sslsni = 1\n  ssl_min_protocol_version = TLSv1.2\n  gssencmode = prefer\n  krbsrvname = postgres\n  target_session_attrs = any\n\n\n\n\nCreating Drug and Disease Look-Ups\nHere are the anthracyclines we are exploring:\n\n\nCode\ndrugs = [\n    (name = \"Daunorubicin\", id = 1311799),\n    (name = \"Doxorubicin\", id = 1338512),\n    (name = \"Epirubicin\", id = 1344354),\n    (name = \"Idarubicin\", id = 19078097),\n    (name = \"Mitoxantrone\", id = 1309188),\n    (name = \"Valrubicin\", id = 19012543),\n    (name = \"Ibrutinib\", id = 44507848),\n    (name = \"Acalabrutinib\", id = 792764),\n    (name = \"Zanubrutinib\", id = 37497691),\n]\n\n\n9-element Vector{@NamedTuple{name::String, id::Int64}}:\n (name = \"Daunorubicin\", id = 1311799)\n (name = \"Doxorubicin\", id = 1338512)\n (name = \"Epirubicin\", id = 1344354)\n (name = \"Idarubicin\", id = 19078097)\n (name = \"Mitoxantrone\", id = 1309188)\n (name = \"Valrubicin\", id = 19012543)\n (name = \"Ibrutinib\", id = 44507848)\n (name = \"Acalabrutinib\", id = 792764)\n (name = \"Zanubrutinib\", id = 37497691)\n\n\nHere are the diseases we are exploring:\n\n\nCode\ndiseases = [\n    (name = \"Myocardial Infarction\", id = 4329847),\n    (name = \"Heart Failure\", id = 316139),\n]\n\n\n2-element Vector{@NamedTuple{name::String, id::Int64}}:\n (name = \"Myocardial Infarction\", id = 4329847)\n (name = \"Heart Failure\", id = 316139)\n\n\nFor both these drugs and diseases, the IDs come from ATLAS, a tool to develop computable phenotype definitions (i.e.¬†translating a disease phenotype definition to the same thing but in code). How these IDs were found for a drug is as follows (using Doxorubicin as an example):\n\nSearch within ATLAS for Doxorubicin.\nClick any Doxorubicin-related drug name.\nLook through the related concepts or hierarchy (in the parent section) for the ingredient version of the drug.\nCopy that ID for the ingredient version of Doxorubicin.\n\nThat is the ID we used here as it is the base for all other Doxorubicin medications.\nNext, we can do something similar for Myocardial Infarction:\n\nSearch within ATLAS for Myocardial Infarction.\nClick any Myocardial Infarction-related name.\nLook through the hierarchy of this disease. The condition version we are looking for is that parent concepts are too broad for our condition and the current condition we select should have children that encompass all diseases we want (in this case, this is recorded condition is the perfect level of granularity).\nCopy that ID for the ingredient version of Myocardial Infarction.\n\nThat is the ID we used here as it is the base for all other Myocardial Infarction-related disease conditions.\nNext, we‚Äôll discuss how to create a query that includes the derivatives of the general concepts for the drugs and diseases we found.\n\n\nGenerating Ad Hoc Phenotype Definitions\nHere, we programmatically query the public ATLAS instance that is running to get the children IDs of the general concepts (referred to as descendants in ATLAS). In this case, we are, in a very ad hoc way, creating an implicit computable phenotype definition where we are looking for all drugs and diseases that are based off our general concepts. This is great for rapid prototyping, but a phenotype definition must be scrutinized ruthlessly when moving towards a final version for patient analysis (see: Zelko, Jacob S., et al.¬†‚ÄúDeveloping a Robust Computable Phenotype Definition Workflow to Describe Health and Disease in Observational Health Research.‚Äù arXiv preprint arXiv:2304.06504 (2023). which discussed more about this process).\nThis is how we do that for drugs:\n\n\nCode\ndrug_descendants = []\nfor drug in drugs\n    path = \"https://atlas-demo.ohdsi.org/WebAPI/vocabulary/ATLASPROD/concept/$(drug.id)/descendants/\"\n    descendants = \n        HTTP.get(path) |&gt; \n        x -&gt; String(x.body) |&gt; \n        JSON3.read\n    push!(drug_descendants, descendants)\nend\n\n\nThis is how we do that for diseases:\n\n\nCode\ndisease_descendants = []\nfor disease in diseases\n    path = \"https://atlas-demo.ohdsi.org/WebAPI/vocabulary/ATLASPROD/concept/$(disease.id)/descendants/\"\n    descendants = \n        HTTP.get(path) |&gt; \n        x -&gt; String(x.body) |&gt; \n        JSON3.read\n    push!(disease_descendants, descendants)\nend\n\n\n\n\nAnalyzing the OMOPCDM Database\nFind users of the drugs we are interested in:\n\n\nCode\ndrug_users = Dict()\nfor (idx, drug) in enumerate(drugs)\n    ids = OMOPCDMCohortCreator.DrugExposureFilterPersonIDs(\n        [\n            drug[:CONCEPT_ID] \n            for drug in drug_descendants[idx]\n        ], conn).person_id\n    push!(\n        drug_users, \n        drug.name =&gt; \n            (ids = ids, count = length(ids))\n    )\nend\n\n\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\n\n\nFind patients diagnosed with the conditions we are interested in:\n\n\nCode\ndiseased_patients = Dict()\nfor (idx, disease) in enumerate(diseases)\n    ids = ConditionFilterPersonIDs(\n        [\n            d[:CONCEPT_ID] \n            for d in disease_descendants[idx]\n            ], conn).person_id\n    push!(\n        diseased_patients, \n        disease.name =&gt; \n            (ids = ids, count = length(ids))\n        )\nend\n\n\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\nWARNING:  database \"synthea\" has a collation version mismatch\nDETAIL:  The database was created using collation version 2.37, but the operating system provides version 2.38.\nHINT:  Rebuild all objects in this database that use the default collation and run ALTER DATABASE synthea REFRESH COLLATION VERSION, or build PostgreSQL with the right library version.\n\n\nFind the combination of patients diagnosed with the conditions we are interested in and taking the drugs we want to investigate:\n\n\nCode\ncondition_mix = Dict()\nfor pg in keys(diseased_patients)\n    push!(condition_mix, pg =&gt; Dict())\n    for du in keys(drug_users)\n        mix = intersect(\n            diseased_patients[pg].ids, \n            drug_users[du].ids\n        )\n        push!(\n            condition_mix[pg], \n            du =&gt; (ids = mix, count = length(mix))\n        )\n    end\nend\n\n\n\n\n\n\n\n\n Back to topCitationBibTeX citation:@online{s._zelko2024,\n  author = {S. Zelko, Jacob},\n  title = {Exploring {Anthracyclines} and {Disease} Within an {OMOP}\n    {CDM} {Database}},\n  date = {2024-06-23},\n  url = {https://juliahealth.org/JuliaHealthBlog/posts/complex_characterization/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nS. Zelko, Jacob. 2024. ‚ÄúExploring Anthracyclines and Disease\nWithin an OMOP CDM Database.‚Äù June 23, 2024. https://juliahealth.org/JuliaHealthBlog/posts/complex_characterization/."
  }
]